import React, { Component, Fragment } from 'react'
import { getCategories, addMemory } from '../actions/memories'
import { connect } from 'react-redux'
import PropTypes from 'prop-types'

class MemoryForm extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            title: "",
            description: "",
            photo: "",
            photoPreviewUrl: "",
            video: "",
            audio: "",
            address: "",
            longitude: -73.567244,
            latitude: 45.498223,
            heading: 5,
            pitch: 5,
            zoom: 1,
            dateofmemory: "",
            owner: "",
            category: "",
        };

        this.onChange = this.onChange.bind(this)
        this.onSubmit = this.onSubmit.bind(this)
        this.mapChange = this.mapChange.bind(this)
    }

    onSubmit(e) {
        e.preventDefault();
        // TODO: do something with -> this.state.file
        console.log('handle uploading-', this.state.photo);
    }

    componentDidMount() {
        console.log("mounted")
        this.props.getCategories()
        console.log(this.props.categories)
    }

    onChange(e) {
        e.preventDefault();

        let target = e.target
        let name = target.name
        let value = null

        if (name === "photo") {
            value = target.files[0]
        }
        else {
            value = target.value
        }

        this.setState({ [name]: value })

        if (name === "photo") {
            let reader = new FileReader();

            reader.onloadend = () => {
                this.setState({
                    photoPreviewUrl: reader.result
                });
            }
            reader.readAsDataURL(value)
        }
    }



    mapChange = panorama => {
        console.log("changed stuff in map")

        console.log("position")
        // MUST HAVE () at the end
        console.log(panorama.getPosition().lat())
        console.log(panorama.getPosition().lng())

        console.log("pov")
        //FOR SOME REASON, no () at the end.
        console.log(panorama.getPov().heading),
            console.log(panorama.getPov().pitch),
            console.log(panorama.getPov().zoom)


        var lat = panorama.getPosition().lat()
        var lng = panorama.getPosition().lng()
        var heading = panorama.getPov().heading
        var pitch = panorama.getPov().pitch
        var zoom = panorama.getPov().zoom

        //will create an infinite loop

        this.setState({
            latitude: lat,
            longitude: lng,
            heading: heading,
            pitch: pitch,
            zoom: zoom,
        })

    }


    render() {

        const { title, description, photo, video, audio,
            address, longitude, latitude, heading, pitch, zoom,
            dateofmemory, category } = this.state

        const coordinates = { lat: parseFloat(latitude), lng: parseFloat(longitude) };

        let panorama = new window.google.maps.StreetViewPanorama(
            document.getElementById('pano'), {
            position: coordinates,
            pov: {
                heading,
                pitch,
                zoom
            },
            position_changed: console.log("changed position")
        });

        panorama.addListener('position_changed', () => {

            this.mapChange(panorama)
        });

        panorama.addListener('pov_changed', () => {

            this.mapChange(panorama)
        });



        let { photoPreviewUrl } = this.state;
        let $photoPreview = null;

        if (photoPreviewUrl) {
            $photoPreview = (<img src={photoPreviewUrl} />);
        } else {
            $photoPreview = (<div className="previewText">Please select an Image for Preview</div>);
        }

        return (

            <Fragment>
                <div className="card card-body mt-4 mb-4">
                    <h2>Add Memory</h2>

                    <div id="infoWindowContent">
                        <div id="memory">
                            {$photoPreview}
                        </div>
                        <div id="pano"></div>
                    </div>

                    <form onSubmit={this.onSubmit}>
                        <div className="form-group">
                            <label>Title</label>
                            <input
                                className="form-control"
                                type="text"
                                name="title"
                                onChange={this.onChange}
                                value={this.state.title}
                            />
                        </div>
                        <div className="form-group">
                            <label>Image</label>

                            <div >
                                <input
                                    className="form-control"
                                    type="file"
                                    name="photo"
                                    accept="image/*"
                                    onChange={this.onChange}
                                />

                            </div>

                        </div>
                        <div className="form-group">
                            <label>Address</label>
                            <input
                                className="form-control"
                                type="text"
                                name="address"
                                onChange={this.onChange}
                                value={this.state.address}
                            />
                        </div>
                        <div className="form-group">
                            <label>Longitude </label>
                            <input
                                className="form-control"
                                type="number"
                                name="longitude"
                                onChange={this.onChange}
                                value={this.state.longitude}
                            />
                        </div>
                        <div className="form-group">
                            <label>Latitude</label>
                            <input
                                className="form-control"
                                type="number"
                                name="latitude"
                                onChange={this.onChange}
                                value={this.state.latitude}
                            />
                        </div>
                        <div className="form-group">
                            <label>Heading</label>
                            <input
                                className="form-control"
                                type="number"
                                name="heading"
                                onChange={this.onChange}
                                value={this.state.heading}
                            />
                        </div>
                        <div className="form-group">
                            <label>Pitch</label>
                            <input
                                className="form-control"
                                type="number"
                                name="pitch"
                                onChange={this.onChange}
                                value={this.state.pitch}
                            />
                        </div>
                        <div className="form-group">
                            <label>Date of Memory</label>
                            <input
                                className="form-control"
                                type="date"
                                name="dateofmemory"
                                onChange={this.onChange}
                                value={this.state.dateofmemory}
                            />
                        </div>
                        <div className="form-group">
                            <label>Description</label>
                            <textarea
                                className="form-control"
                                type="text"
                                name="message"
                                onChange={this.onChange}
                                value={this.state.description}
                            />
                        </div>

                        <div className="form-group">
                            {this.props.categories.map(category => {
                                <option name="categories" value={category}>{category}</option>
                            })}
                        </div>



                        <div className="form-group">
                            <button type="submit" className="btn btn-primary">
                                Submit
                            </button>
                        </div>
                    </form>
                </div>
            </Fragment >



        )
    }


}
const mapStateToProps = state => ({
    categories: state.memories.categories,
    user: state.auth.user
})

export default connect(mapStateToProps, { getCategories, addMemory })(MemoryForm)
